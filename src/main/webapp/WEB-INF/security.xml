<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http auto-config="true" use-expressions="true">
		<form-login login-page="/login" login-processing-url="/static/j_spring_security_check"
			authentication-failure-url="/login?error=true" default-target-url="/game"
			always-use-default-target="false" />
		<logout logout-url="/static/j_spring_security_logout"
			logout-success-url="/home" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/policy" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/favicon.ico" access="permitAll" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/login" access="isAnonymous()" />
		<intercept-url pattern="/forgot" access="isAnonymous()" />
		<intercept-url pattern="/reset" access="isAnonymous()" />
		<intercept-url pattern="/forgot/**" access="isAnonymous()" />
		<intercept-url pattern="/register" access="isAnonymous()" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
	</http>

	<beans:bean class="java.net.URI" id="dbUrl">
		<beans:constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="url"
			value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
		<beans:property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<beans:property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</beans:bean>

	<beans:bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder">
    </beans:bean>
    
	<authentication-manager>
		<authentication-provider>
		    <password-encoder hash="sha" ref="passwordEncoder"></password-encoder>
			<jdbc-user-service id="userService"
				data-source-ref="dataSource"
				users-by-username-query="select username, password, true from GameUser where username=?"
				authorities-by-username-query="select gameuser_username as username, roles from gameuser_roles where gameuser_username=?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>